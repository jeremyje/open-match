# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.openmatch.synchronizer.install }}
kind: Service
apiVersion: v1
metadata:
  name: om-synchronizer
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "openmatch.name" . }}
    {{- include "openmatch.chartmeta" (set . "indent" 4) }}
spec:
  selector:
    app: {{ template "openmatch.name" . }}
    component: synchronizer
  ports:
  - name: grpc
    protocol: TCP
    port: {{ .Values.openmatch.synchronizer.grpc.port }}
  - name: http
    protocol: TCP
    port: {{ .Values.openmatch.synchronizer.http.port }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-synchronizer
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "openmatch.name" . }}
    component: synchronizer
    {{- include "openmatch.chartmeta" (set . "indent" 4) }}
spec:
  replicas: {{ .Values.openmatch.synchronizer.replicas }}
  selector:
    matchLabels:
      app: {{ template "openmatch.name" . }}
      component: synchronizer
      {{- include "openmatch.chartmeta" (set . "indent" 6) }}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      annotations:
        {{- include "prometheus.annotations" (dict "port" .Values.openmatch.synchronizer.http.port "prometheus" .Values.openmatch.monitoring.prometheus) | nindent 8 }}
      labels:
        app: {{ template "openmatch.name" . }}
        component: synchronizer
        can-talk-to-evaluator: "true"
        {{- include "openmatch.chartmeta" (set . "indent" 8) }}
    spec:
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-synchronizer
        image: "{{ .Values.openmatch.image.registry }}/{{ .Values.openmatch.image.synchronizer.name}}:{{ .Values.openmatch.image.tag }}"
        imagePullPolicy: {{ .Values.openmatch.image.synchronizer.pullPolicy }}
        volumeMounts:
        - name: om-config-volume
          mountPath: {{ .Values.openmatch.config.mountPath }}
        ports:
        - name: grpc
          containerPort: {{ .Values.openmatch.synchronizer.grpc.port }}
        - name: http
          containerPort: {{ .Values.openmatch.synchronizer.http.port }}
        {{- include "kubernetes.probe" (dict "port" .Values.openmatch.synchronizer.http.port) | nindent 8 }}
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        env:
        - name: REDIS_SERVICE_HOST
          value: "$(OM_REDIS_MASTER_SERVICE_HOST)"
        - name: REDIS_SERVICE_PORT
          value: "$(OM_REDIS_MASTER_SERVICE_PORT)"
        {{- if .Values.redis.usePassword }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.redis.fullnameOverride }}
              key: redis-password
        {{- end}}
      volumes:
      - name: om-config-volume
        configMap:
          name: om-configmap
---
{{- if .Values.openmatch.security.networkpolicy }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: om-synchronizer-network-policy
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "openmatch.name" . }}
    {{- include "openmatch.chartmeta" (set . "indent" 4) }}
spec:
  podSelector:
    matchLabels:
      component: synchronizer
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          can-talk-to-synchronizer: "true"
{{- end }}
{{- end }}
